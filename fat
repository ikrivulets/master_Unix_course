#!/bin/bash

# parsing command line arguments
if [ "$#" -ne 0 ] && [ "$#" -ne 2 ];
then
  echo "There should be 2 or 0 arguments" >&2
  exit 1
fi

if [ "$#" -eq 0 ]; 
then
  NUM_OF_MISSED=0
  NUM_OF_FILES=10
else 
  NUM_OF_MISSED=$1
  NUM_OF_FILES=$2
fi

# checking if integers
re='^[0-9]+$'
if ! [[ $NUM_OF_FILES =~ $re ]];
then
   echo "error: NUM_OF_FILES is not a correct input number" >&2; 
   exit 1
fi
if ! [[ $NUM_OF_MISSED =~ $re ]];
then
   echo "error: NUM_OF_MISSED is not a correct input number" >&2; 
   exit 1
fi

if [ $NUM_OF_MISSED -ge $NUM_OF_FILES ];
then
   echo "error: NUM_OF_MISSED should be less than NUM_OF_FILES" >&2; 
   exit 1
fi

FILES_LIST="$(du -ah | sort -rh | head -n $(expr $NUM_OF_FILES + $NUM_OF_MISSED + 1) | sort -h | head -n $NUM_OF_FILES | sort -rh)"

FILES_SIZES="$(du -a | sort -rh | head -n $(expr $NUM_OF_FILES + $NUM_OF_MISSED + 1) | sort -h | head -n  $NUM_OF_FILES | sort -rh | awk '{ total += $1}; END { print total}')"


result="$(numfmt --to=iec-i --suffix=B --padding=7 $(($FILES_SIZES * 1024)))"
RESULT_NO_WHITESPACE="$(echo -e "${result}" | tr -d '[:space:]')"
RESULT_NO_WHITESPACE+="	total"

echo "$FILES_LIST"
echo "$RESULT_NO_WHITESPACE"
